---
name: build and push

on:
  push:
    branches:
      - 'main'
  schedule:
    - cron: '0 11 * * 2'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:

jobs:
  docker:
    name: build and push docker images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
        - {
          compiler-variant: "GCC12_NoMPI",
          compiler-variant-image: "ubuntu:22.04"
        }
        - {
          compiler-variant: "GCC12_MPICH",
          compiler-variant-image: "ubuntu:22.04"
        }
        #- {
        #  compiler-variant: "IntelOneAPI_NoMPI",
        #  compiler-variant-image: "intel/oneapi:2024.2.0-1-devel-ubuntu22.04"
        #}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Gather metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            shivupa/cq-ci
          flavor: |
            latest=true
          tags: |
            type=edge,suffix='',prefix=${{ matrix.config.compiler-variant }}-
          #type=schedule,pattern={{date 'YYYYMMDD'}},prefix=${{ matrix.config.compiler-variant }}-
          #type=sha,prefix=${{ matrix.config.compiler-variant }}-
          #type=edge,prefix=${{ matrix.config.compiler-variant }}-
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and export to Docker
        uses: docker/build-push-action@v5
        with:
          build-args: |
            COMPILER_VARIANT_IMAGE=${{ matrix.config.compiler-variant-image }}
          push: false
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      -
        name: Slim docker image
        uses: kitabisa/docker-slim-action@v1.1.2
        env:
          DSLIM_PULL: true
          DSLIM_HTTP_PROBE: false
        with:
          overwrite: true
          target: ${{ steps.meta.outputs.tags }}
      -
        name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        if: ${{ github.event_name != 'pull_request'}}
      -
        name: Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          build-args: |
            COMPILER_VARIANT_IMAGE=${{ matrix.config.compiler-variant-image }}
          push: true
          tag: ${{ steps.meta.outputs.tags }}
        if: ${{ github.event_name != 'pull_request'}}
